openapi: 3.0.1
info:
  version: 1.0.0
  title: Real Estate Management
  description: 'A sample API that uses real estate management to demonstrate microservices architecture'
  contact:
    name: ITS4U Luxembourg
    url: http://its4u.com
    email: contact@its4u.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /properties:
    get:
      summary: List all real estate properties
      operationId: listRealEstateProperties
      tags:
        - real-estate-properties
      parameters:
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageNumber'
      responses:
        '200':
          description: A paged array of real estate properties
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RealEstateProperties"
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: Register a real estate property
      operationId: createRealEstateProperty
      tags:
        - real-estate-properties
      requestBody:
        description: Real estate property to register
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealEstateProperty'
      responses:
        '201':
          description: Real estate property registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateProperty'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /property/{propertyId}:
    parameters:
      - $ref: '#/components/parameters/propertyId'
    get:
      summary: Show details of a specific real estate property
      operationId: showRealEstatePropertyById
      tags:
        - real-estate-properties
      responses:
        '200':
          description: Real estate property details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RealEstateProperty"
        default:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: Update a single real estate property
      operationId: updateRealEstateProperty
      tags:
        - real-estate-properties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealEstateProperty'
      responses:
        '200':
          description: Real estate property updated
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: Delete a single real estate property
      operationId: deleteRealEstateProperty
      tags:
        - real-estate-properties
      responses:
        '204':
          description: Real estate property deleted
        default:
          $ref: '#/components/responses/ErrorResponse'
components:
  schemas:
    RealEstateProperty:
      required:
        - id
        - address
        - city
        - category
        - size
        - bedroom-count
      properties:
        id:
          type: string
          format: uuid
        address:
          type: string
          description: Full address (number, street, floor, and so)
        city:
          type: string
          description: Location
        category:
          type: string
          description: Classification (apartment, house, duplex, and so on)
        size:
          type: integer
          format: int32
          description: Size in square meters
        bedroom-count:
          type: integer
          format: int32
          minimum: 1
          description: Number of bedrooms
    RealEstateProperties:
      type: array
      items:
        $ref: "#/components/schemas/RealEstateProperty"
    Error:
      required:
        - code
        - message
        properties:
          code:
            type: integer
            format: int32
          message:
            type: string
  parameters:
    propertyId:
      name: propertyId
      in: path
      required: true
      description: The real estate identifier path parameter
      schema:
        type: string
        format: uuid
    pageSize:
      name: pageSize
      in: query
      description: Number of items returned query parameter
      schema:
        type: integer
        minimum: 0
    pageNumber:
      name: pageNumber
      in: query
      description: Page number query parameter
      schema:
        type: integer
        minimum: 0
  responses:
    ErrorResponse:
      description: An unexpected error occured
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
